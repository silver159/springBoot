# 서버 포트 번호 변경
server.port=9090

 # 한글 깨짐 방지
server.servlet.encoding.force=true

# H2 데이터베이스 웹 콘솔 접근 허용
# spring.h2.console.enabled=true


# 더미 데이터 사용시
# H2 자동 스키마 생성을 비활성화 한다. => schema.sql 파일의 내용대로 테이블을 만든다.
# spring.jpa.hibernate.ddl-auto=none


# 더미 데이터 사용시(권장)
# 초기화를 통해 생성된 스키마에 data.sql을 실행해서 데이터를 채운다.
# spring.jpa.defer-datasource-initialization=true


# JPA 로깅 설정
# 디버그 레벨로 쿼리를 출력한다.
logging.level.org.hibernate.SQL=DEBUG

# 쿼리를 보기 편하게 출력한다.
spring.jpa.properties.hibernate.format_sql=true

# 쿼리에 적용되는 파라미터를 보여준다.
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# H2 데이터베이스 URL 고정 설정
# 유니크 URL을 생성하지 않는다.
spring.datasource.generate-unique-name=false

# 고정 URL을 설정한다.
# spring.datasource.url=jdbc:h2:mem:testdb

# PostgreSQL 연동
# 사용할 데이터베이스의 url
spring.datasource.url=jdbc:postgresql://localhost:5432/firstProject_db
# 사용할 데이터베이스 계정 (기본값 = postgres)
spring.datasource.username=postgres
# 사용할 데이터베이스 비밀번호
spring.datasource.password=0000

# 서버가 실행될 때 데이터를 생성하고 종료될 때 제거한다. H2와 같은 방식
# spring.jpa.hibernate.ddl-auto=create-drop

# 서버가 실행될 때 데이터베이스의 데이터를 항상 초기화시키지 않고 유지되게 한다.
spring.jpa.hibernate.ddl-auto=update

# 더미데이터 사용하기
# 데이터베이스 초기화 정보 (더미 데이터 사용시)
# spring.datasource.data=classpath:/data.sql => springBoot 2.7 부터 지원되지 않으므로 아래 방식으로 설정한다.
# spring.sql.init.data-locations=classpath:/data.sql
# 실행시 항상 data.sql의 데이터로 초기화 시킨다. (더미 데이터 사용시)
# spring.datasource.initialization-mode=always => springBoot 2.7 부터 지원되지 않으므로 아래 방식으로 설정한다.
# spring.sql.init.mode=always